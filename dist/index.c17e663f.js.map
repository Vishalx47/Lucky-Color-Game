{"mappings":"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","sources":["js/main.js"],"sourcesContent":["\"use strict\";\r\n\r\n//dom selection\r\nconst myMoney = document.querySelector(\".payment__total-amount\");\r\nconst colorButtons = document.querySelectorAll(\".color__button\");\r\nconst numberButtons = document.querySelectorAll(\".number__button\");\r\nconst currPeriod = document.querySelector(\".period\");\r\nconst currTime = document.querySelector(\".timer\");\r\nconst resultContainer = document.querySelector(\".result__container\");\r\nconst popUp = document.querySelector(\".pop-up-bet\");\r\nconst cancelButton = document.querySelector(\".bet__cancel\");\r\nconst confirmButton = document.querySelector(\".bet__confirm\");\r\nconst inputAmount = document.querySelector(\".bet__controls-input\");\r\nconst amountButtons = document.querySelectorAll(\".bet__controls-button\");\r\nconst amountTypeButton = document.querySelectorAll(\".bet__amount-button\");\r\nconst popHeading = document.querySelector(\".bet__heading\");\r\nconst loader = document.querySelector(\".loader\");\r\n\r\n/////////////////////////////////////////////////////////////////////\r\n//important varibels\r\n/////////////////////////////////////////////////////////////////////\r\n//initial id\r\nlet id = 0;\r\n\r\n//set user money\r\nconst addMoney = 500;\r\nmyMoney.textContent = addMoney;\r\n\r\n//show result in this time\r\nconst showResultTime = 2000;\r\n\r\n//user bet data\r\nconst userBet = {\r\n  color: \"\",\r\n  number: \"\",\r\n  betAmount: \"\",\r\n  userResult: \"\",\r\n  gameId: \"\",\r\n};\r\n\r\n//user bet history\r\nlet userBetHistory = [];\r\n\r\n/////////////////////////////////////////////////////////////////////\r\n//helping function\r\n/////////////////////////////////////////////////////////////////////\r\nfunction removeBackgroundColor() {\r\n  popHeading.classList.remove(`bet__heading--red`);\r\n  popHeading.classList.remove(`bet__heading--voilet`);\r\n  popHeading.classList.remove(`bet__heading--green`);\r\n}\r\n\r\n/////////////////////////\r\n//generate html and ui\r\nconst html = function (data) {\r\n  const html = `\r\n          <div class=\"result__details\">\r\n            <h4 class=\"result__details-period\">${(data.gameId - 1)\r\n              .toString()\r\n              .padStart(2, \"0\")}</h4>\r\n            <h4 class=\"result__details-price result__details-price--${\r\n              data.gameResult\r\n            }\">\r\n              ${data.gameResult === \"win\" ? \"+\" : \"-\"}â‚¹${data.gameBetAmount}\r\n            </h4>\r\n            <h4 class=\"result__details-number\">${data.gameBetNumber\r\n              .toString()\r\n              .padStart(2, \"0\")}</h4>\r\n            <h4 class=\"result__details-result result__details-result--${\r\n              data.gameBetColor\r\n            }\">\r\n              <span></span>\r\n            </h4>\r\n          </div>`;\r\n\r\n  resultContainer.insertAdjacentHTML(\"afterbegin\", html);\r\n};\r\n\r\n//warning message function\r\nfunction warning() {\r\n  document.querySelector(\".not-enough-money\").style.opacity = \"1\";\r\n  document.querySelector(\".bet__container\").classList.add(\"animation-active\");\r\n  setTimeout(() => {\r\n    document.querySelector(\".not-enough-money\").style.opacity = \"0\";\r\n    document\r\n      .querySelector(\".bet__container\")\r\n      .classList.remove(\"animation-active\");\r\n  }, 2000);\r\n}\r\n/////////////////////////////////////////////////////////////////////\r\n//random color function\r\nconst colors = [\"red\", \"voilet\", \"green\"];\r\nlet randomColors = colors[Math.floor(Math.random() * 3)];\r\n\r\n//random number function\r\nconst number = [1, 2, 3, 4, 5, 6, 7, 8];\r\nlet randomNumber = number[Math.floor(Math.random() * 8)];\r\n\r\n/////////////////////////////////////////////////////////////////////\r\n//color button function\r\ncolorButtons.forEach((button) => {\r\n  button.addEventListener(\"click\", (e) => {\r\n    const color = button.dataset.color;\r\n\r\n    // set heading color and content\r\n    removeBackgroundColor();\r\n    popHeading.classList.add(`bet__heading--${color}`);\r\n    popHeading.textContent = `Join ${color}`;\r\n\r\n    //unhide pop up\r\n    popUp.classList.add(\"popup-active\");\r\n\r\n    //set color to userbet object\r\n    userBet.color = color;\r\n  });\r\n});\r\n\r\n//number button function\r\nnumberButtons.forEach((button) => {\r\n  button.addEventListener(\"click\", function (e) {\r\n    const number = button.dataset.number;\r\n\r\n    //unhide pop up\r\n    popUp.classList.add(\"popup-active\");\r\n\r\n    // set heading number and color\r\n    removeBackgroundColor();\r\n    popHeading.textContent = `Join ${number.toString().padStart(2, \"0\")}`;\r\n\r\n    //set number to userbet object\r\n    userBet.number = number;\r\n  });\r\n});\r\n\r\n//close popup\r\ncancelButton.addEventListener(\"click\", function (e) {\r\n  popUp.classList.remove(\"popup-active\");\r\n});\r\n\r\n//bet amount button\r\namountTypeButton.forEach((button) => {\r\n  button.addEventListener(\"click\", (e) => {\r\n    const amountType = +button.dataset.amount;\r\n\r\n    //set input value = amountype\r\n    inputAmount.value = amountType;\r\n\r\n    //bet increase function\r\n    document.querySelector(\r\n      \".bet__controls-increase\"\r\n    ).dataset.curramount = `+${amountType}`;\r\n\r\n    //bet decrease function\r\n    document.querySelector(\r\n      \".bet__controls-decrease\"\r\n    ).dataset.curramount = `-${amountType}`;\r\n  });\r\n});\r\n\r\n//bet amount control\r\namountButtons.forEach((button, i) => {\r\n  button.addEventListener(\"click\", (e) => {\r\n    //guard clause\r\n    if (\r\n      button.classList.contains(\"bet__controls-decrease\") &&\r\n      +inputAmount.value < 10\r\n    )\r\n      return;\r\n\r\n    //get bet value from dataset\r\n    let nextAmount = +button.dataset.curramount;\r\n    let currAmount = +inputAmount.value + nextAmount;\r\n\r\n    //set bet to input\r\n    inputAmount.value = currAmount;\r\n  });\r\n});\r\n\r\n///////////////////////////////////\r\n//conforme bet / and main function\r\n///////////////////////////////////\r\nconfirmButton.addEventListener(\"click\", function (e) {\r\n  //guard clause for not enough money or not minimum money for bet\r\n  if (+inputAmount.value > +myMoney.textContent) {\r\n    document.querySelector(\".not-enough-money\").textContent =\r\n      \"Not enough balance\";\r\n    warning();\r\n    return;\r\n  }\r\n\r\n  if (+inputAmount.value < 10) {\r\n    document.querySelector(\".not-enough-money\").textContent =\r\n      \"Bet amount is not enough minimum is â‚¹10\";\r\n    warning();\r\n    return;\r\n  }\r\n  //loader active\r\n  loader.classList.add(\"loader-active\");\r\n  resultContainer.style.opacity = \"0.2\";\r\n\r\n  //unhide popup\r\n  popUp.classList.remove(\"popup-active\");\r\n\r\n  //set user bet to userObject\r\n  const betAmount = inputAmount.value;\r\n  userBet.betAmount = betAmount;\r\n\r\n  //reassign random color and number\r\n  randomColors = colors[Math.floor(Math.random() * 3)];\r\n  randomNumber = number[Math.floor(Math.random() * 8)];\r\n\r\n  //cheak bet color or number with random color/number\r\n  window.setTimeout(() => {\r\n    //loader-deactivate\r\n    loader.classList.remove(\"loader-active\");\r\n    resultContainer.style.opacity = \"1\";\r\n\r\n    //set id to userbet object\r\n    userBet.gameId = ++id;\r\n\r\n    ///////////////////////////\r\n    //cheak function\r\n    ///////////////////////////\r\n    if (\r\n      (+inputAmount.value <= +myMoney.textContent &&\r\n        +inputAmount.value >= 10 &&\r\n        userBet.color) ||\r\n      userBet.number\r\n    ) {\r\n      /////////////////////////\r\n      //color cheak function\r\n      /////////////////////////\r\n      if (userBet.color && userBet.color === randomColors) {\r\n        myMoney.textContent = `${\r\n          Number(myMoney.textContent) + Number(userBet.betAmount)\r\n        }`;\r\n\r\n        //set user result to userbet object\r\n        userBet.userResult = \"win\";\r\n      }\r\n      /////////////////////////\r\n      //number cheak function\r\n      /////////////////////////\r\n      else if (+userBet.number && +userBet.number === randomNumber) {\r\n        myMoney.textContent = `${\r\n          Number(myMoney.textContent) + Number(userBet.betAmount) * 8\r\n        }`;\r\n\r\n        //set user result and Number game win amount to userBet Object\r\n        userBet.userResult = \"win\";\r\n        userBet.betAmount = +userBet.betAmount * 8;\r\n      }\r\n      /////////////////////////\r\n      //loss cheak function\r\n      /////////////////////////\r\n      else if (\r\n        userBet.color !== randomColors &&\r\n        userBet.number !== randomNumber\r\n      ) {\r\n        myMoney.textContent = `${\r\n          Number(myMoney.textContent) - Number(userBet.betAmount)\r\n        }`;\r\n\r\n        //set user result to userbEt to Object\r\n        userBet.userResult = \"loss\";\r\n      }\r\n\r\n      //set current bet data to object\r\n      const userBetData = {\r\n        gameBetColor: randomColors,\r\n        gameBetNumber: randomNumber,\r\n        gameResult: userBet.userResult,\r\n        gameBetAmount: userBet.betAmount,\r\n        gameId: id,\r\n        userAmount: myMoney.textContent,\r\n      };\r\n\r\n      //generate html with current bet data\r\n      html(userBetData);\r\n\r\n      //set bet to localstorage\r\n      userBetHistory.push(userBetData);\r\n      localStorage.setItem(\"bets\", JSON.stringify(userBetHistory));\r\n\r\n      //set new id after current bet complete\r\n      currPeriod.textContent = `${id}`.toString().padStart(2, \"0\");\r\n    }\r\n\r\n    //clear user bet before start new game\r\n    userBet.color = \"\";\r\n    userBet.number = \"\";\r\n  }, showResultTime);\r\n});\r\n\r\n//on load set user bet history to ui with latest data\r\n(function () {\r\n  const betHistory = JSON.parse(localStorage.getItem(\"bets\"));\r\n  if (!betHistory) return;\r\n  userBetHistory = betHistory;\r\n  betHistory\r\n    .map((bet) => {\r\n      html(bet);\r\n    })\r\n    .join(\" \");\r\n\r\n  //set money and current id\r\n  const latestBet = betHistory[betHistory.length - 1];\r\n  console.log(latestBet);\r\n\r\n  //user data ui\r\n  myMoney.textContent = latestBet.userAmount;\r\n  id = latestBet.gameId;\r\n  document.querySelector(\".period\").textContent = id.toString();\r\n})();\r\n\r\n//clear local storage and start new game\r\ndocument.querySelector(\".reset__game\").addEventListener(\"click\", (e) => {\r\n  window.localStorage.clear();\r\n  window.location.reload();\r\n});\r\n"],"names":["myMoney","document","querySelector","colorButtons","querySelectorAll","numberButtons","currPeriod","currTime","resultContainer","popUp","cancelButton","confirmButton","inputAmount","amountButtons","amountTypeButton","popHeading","loader","id","addMoney","textContent","showResultTime","userBet","color","number","betAmount","userResult","gameId","userBetHistory","removeBackgroundColor","classList","remove","html","data","toString","padStart","gameResult","gameBetAmount","gameBetNumber","gameBetColor","insertAdjacentHTML","warning","style","opacity","add","setTimeout","colors","randomColors","Math","floor","random","randomNumber","forEach","button","addEventListener","e","dataset","amountType","amount","value","curramount","i","contains","nextAmount","currAmount","window","Number","userBetData","userAmount","push","localStorage","setItem","JSON","stringify","betHistory","parse","getItem","map","bet","join","latestBet","length","console","log","clear","location","reload"],"version":3,"file":"index.c17e663f.js.map"}